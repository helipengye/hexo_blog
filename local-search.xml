<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>免费搭建个人博客</title>
    <link href="/2025/03/24/%E5%8D%9A%E5%AE%A2/%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2025/03/24/%E5%8D%9A%E5%AE%A2/%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>作为一个个人博客，希望这个网站能够具有以下优点：</p><ol><li>最好是免费的，不需要额外购买云服务器</li><li>维护尽量简单，我们只用它发布文章，不需要太复杂的功能</li><li>网络访问流畅，不论是国内用户还是国外用户，都能访问我们的博客</li></ol><cite style="color:#00A2FF;font-style: italic;font-weight: bold;">在综合考虑了上面3点要求后，我们最终选择了使用 Cloudflare+GitHub+Hexo+Fluid 来搭建博客网站。</cite><h4 id="感谢大佬"><a href="#感谢大佬" class="headerlink" title="感谢大佬"></a>感谢大佬</h4><p><a href="https://tyxiaoming.xin/2025/01/21/%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%8D%9A%E5%AE%A2/#Hexo%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">陶渊小明博客</a><br><a href="https://www.youtube.com/watch?v=IeGJFOlClxc">youtube视频</a></p><p>我的博客按大佬写的，给自己留一个备份，大佬写的很详细建议直接看大佬的</p><h1 id="Hexo环境配置"><a href="#Hexo环境配置" class="headerlink" title="Hexo环境配置"></a>Hexo环境配置</h1><p>hexo 是一个快速、简洁，而且功能强大的静态博客框架。我们可以使用 Markdown 编写博客文章，然后 hexo 帮我们把 Markdown 文件渲染成静态 HTML 页面。因此 hexo 非常适合用来搭建技术类博客，以及项目文档和个人网站。</p><h1 id="1-安装-Node-js"><a href="#1-安装-Node-js" class="headerlink" title="1. 安装 Node.js"></a>1. 安装 Node.js</h1><p>由于 hexo 是基于 Node.js 的，因此要安装 hexo，需要先安装 Node.js 和 npm，然后通过 npm 来安装 hexo。要安装 Node.js ，可以打开Node.js官网，下载软件然后进行安装就可以了。</p><h1 id="2-安装-Hexo"><a href="#2-安装-Hexo" class="headerlink" title="2. 安装 Hexo"></a>2. 安装 Hexo</h1><p>安装 hexo，需要注意我们这里安装的是 hexo客户端 。安装 hexo 需要使用 npm 命令，但是在国内使用 npm 安装软件，速度很慢。因此我们先执行下面这条命令，给 npm 替换成国内的源，这样安装速度就会快很多了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">npm config <span class="hljs-built_in">set</span> registry https://registry.npmmirror.com <br></code></pre></td></tr></table></figure><p>接着执行下面这条命令，使用 npm 安装 hexo客户端。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>使用 hexo 初始化 blog 文件夹（自定义-可以自己改名字）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">hexo init blog<br></code></pre></td></tr></table></figure><p>这个文件夹，就是我们的博客项目，用来存放我们的全部博客文章。然后进入到文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH"><span class="hljs-built_in">cd</span> blog<br></code></pre></td></tr></table></figure><p>接着执行命令安装依赖包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">npm install<br></code></pre></td></tr></table></figure><p>到这里我们的 hexo 环境配置就基本完成了，下面就可以使用它来写文章和发布文章了！👍👍👍</p><h1 id="3-使用-Hexo-管理博客"><a href="#3-使用-Hexo-管理博客" class="headerlink" title="3. 使用 Hexo 管理博客"></a>3. 使用 Hexo 管理博客</h1><p>为了方便编辑，我们使用 vscode 打开 blog 文件夹。下面来看一下 blog 里面的主要组成部分：</p><ol><li>_config.yml：博客的全局配置文件，网站的名称、描述、作者等，都可以在这里进行设置</li><li>source&#x2F;_post：存放我们全部的文章，而且 hexo 自带了一篇 demo 文章 hello-world</li><li>themes：博客的主题配置文件，hexo 有一个默认主题，但不太好看，后面可以改成漂亮一些的主题<br>上面这3部分，就是我们使用 hexo 写博客时需要重点关注的地方。</li></ol><p>接着我们执行命令，在本地把 hexo 服务跑起来。这样我们就可以，在本地网址的4000端口，预览文章效果。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd"># windows执行<br>hexo clean ; hexo g ; hexo s<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># linux执行</span><br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br></code></pre></td></tr></table></figure><p>打开 <a href="http://localhost:4000/">http://localhost:4000/</a> 这个本地网址，已经可以正常访问了，这里就是博客网页的布局。</p><h1 id="4-将博客托管到-GitHub-Pages"><a href="#4-将博客托管到-GitHub-Pages" class="headerlink" title="4. 将博客托管到 GitHub Pages"></a>4. 将博客托管到 GitHub Pages</h1><p>现在我们这个博客，还只能在本地网址预览。下面我们把博客项目托管到 GitHub 仓库，并且使用 GitHub Pages 来部署博客，让其他人也能访问我们的博客网站</p><h3 id="1-博客项目托管到GitHub"><a href="#1-博客项目托管到GitHub" class="headerlink" title="1. 博客项目托管到GitHub"></a>1. 博客项目托管到GitHub</h3><p>为了方便管理 blog 博客项目，我们下一步把这个项目托管到 GitHub 上。首先在 GitHub 上创建一个项目，项目名可以设置为 我们的GitHub用户名.github.io。</p><h3 id="2-使用-GitHub-Pages-部署博客"><a href="#2-使用-GitHub-Pages-部署博客" class="headerlink" title="2. 使用 GitHub Pages 部署博客"></a>2. 使用 GitHub Pages 部署博客</h3><p>执行完配置命令以后，我们就可以使用 git 来管理博客项目了。接下来我们把 my-blog 项目，部署到 GitHub Pages 上。 这样我们的博客，就不再只是一个本地网站了。其他人也可以通过网络，来访问我们的博客。</p><p>首先在 my-blog 项目的 _config.yml 配置文件中，把 git 服务部署的配置加进去。在 type 配置项这里填上 git，然后分别添加一个 repository 和一个 branch 配置，指定部署博客网站时，所使用的 GitHub 项目和对应的分支。repository 这里填 <a href="mailto:&#103;&#105;&#x74;&#x40;&#103;&#x69;&#116;&#x68;&#x75;&#x62;&#x2e;&#x63;&#111;&#109;">&#103;&#105;&#x74;&#x40;&#103;&#x69;&#116;&#x68;&#x75;&#x62;&#x2e;&#x63;&#111;&#109;</a>:GitHub用户名&#x2F;GitHub仓库名，branch 这里指定 main 分支，然后保存配置。</p><p>最后我们执行 npm install hexo-deployer-git –save 命令，安装 hexo-deployer-git 这个插件，来简化部署到 GitHub Pages 的流程。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>这样配置完以后，我们就可以在本地写文章，写完以后通过 <a href="http://localhost:4000/">http://localhost:4000/</a> 预览文章效果并进行修改。修改满意后，就可以部署到 GitHub Pages 这样其他人就能访问我们的博客了。我们来看一下使用流程：</p><p>首先我们使用 hexo new post 文章标题，来创建一篇新文章。这样操作后，hexo 就会在 source&#x2F;_post 下面，给我们生成一个新文件来编辑这篇文章。我们使用上一篇文章，搭建的 免费图床 来简单编辑一下这篇新文章。MarkDown 本地渲染一下，显示正常。然后执行这个三合一命令，把文章发布到 GitHub Pages。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy<br></code></pre></td></tr></table></figure><ul><li>hexo clean：清除缓存，简写 hexo -c</li><li>hexo generate：生成渲染，简写 hexo -g</li><li>hexo deploy：部署到 GitHub Pages，简写 hexo -d</li><li>hexo server：启动本地预览，简写 hexo -s</li></ul><p>发布完成后，打开 <a href="https://github用户名.github.io/">https://github用户名.github.io/</a> 这个网址，就可以访问我们的在线博客了！👌</p>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/03/23/hello-world/"/>
    <url>/2025/03/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
